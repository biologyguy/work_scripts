#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Created on: Jan 30 2015

"""
Create the directories and bash script to run a non-partitioned RAxML job on gryphon
"""

from Bio.Alphabet import IUPAC
import argparse
import os
import sys
import SeqBuddy
from shutil import which
from subprocess import Popen

if not which("mpirun"):
    sys.exit("Error: Unable to find mpirun in $PATH.")

if not which("raxmlHPC-MPI-SSE3"):
    sys.exit("Error: Unable to find raxmlHPC-MPI-SSE3 in $PATH.")

if not which("raxmlHPC-PTHREADS-SSE3"):
    sys.exit("Error: Unable to find raxmlHPC-PTHREADS-SSE3 in $PATH.")

if not which("best_ML_tree.py"):
    sys.exit("Error: Unable to find best_ML_tree.py in $PATH.")

parser = argparse.ArgumentParser(prog="prepare_raxml",
                                 description="",
                                 formatter_class=argparse.ArgumentDefaultsHelpFormatter)

parser.add_argument("sequence_file", help='Input sequence', action='store')
parser.add_argument("-o", "--out_dir", help='Where would you like the output directories and files?',
                    action='store', default=os.getcwd())
parser.add_argument("-f", "--force", help="",
                    action="store_true", default=False)

in_args = parser.parse_args()

file_name = "_".join(in_args.sequence_file.split("/")[-1].split(".")[:-1])
seqs = SeqBuddy.SeqBuddy(in_args.sequence_file)

current_dir = os.getcwd()
outdir = os.path.abspath(in_args.out_dir)
if not os.path.exists(outdir):
    print("Output directory not found, creating it...\n%s" % outdir, file=sys.stderr)
    os.mkdir(outdir)

os.chdir(outdir)

if in_args.force:
    Popen("rm -r ./*", shell=True).wait()

phylip = open("%s.phy" % file_name, "w")

clean_alignment = SeqBuddy.phylipi(seqs)
phylip.write(clean_alignment)

phylip.close()

os.mkdir("./bootstraps")
os.mkdir("./cons_tree")
os.mkdir("./ML_trees")

with open("./RAxML.sh", "w") as ofile:
    model = "PROTGAMMAAUTO" if seqs.alpha == IUPAC.protein else "GTRAUTO"
    sh_output = "source /home/bondsr/.bashrc;\n"
    sh_output += "%s -np 20 %s -s %s/%s.phy -n %s -m %s -f d -p 12345 -N 20 -w %s/ML_trees/ " \
                ";\n" % (which("mpirun"), which("raxmlHPC-MPI-SSE3"), outdir, file_name, file_name, model, outdir)

    sh_output += "#%s -np 100 %s -s %s/%s.phy -n %s -m %s -f d -p 12345 -b 12345 -N 100 -w %s/bootstraps/;\n" \
                 % (which("mpirun"), which("raxmlHPC-MPI-SSE3"), outdir, file_name, file_name, model, outdir)

    sh_output += "#%s %s/ML_trees/RAxML_info.%s;\n" % (which("best_ML_tree.py"), outdir, file_name)

    sh_output += "#%s -n %s -m %s -f b -p 12345 -T 2 -w %s/cons_tree/ -t %s/ML_trees/RAxML_bestTree.%s " \
                 "-z %s/bootstraps/RAxML_bootstrap.%s;\n" \
                 % (which("raxmlHPC-PTHREADS-SSE3"), file_name, model, outdir, outdir, file_name, outdir, file_name)
    ofile.write(sh_output)

os.chdir(current_dir)